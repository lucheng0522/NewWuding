// Generated by dagger.internal.codegen.ComponentProcessor (https://google.github.io/dagger).
package com.i5d5.wuding.WD.Presenter;

import com.i5d5.wuding.WD.Model.Api.ClassApi;
import dagger.MembersInjector;
import dagger.internal.Factory;
import dagger.internal.MembersInjectors;
import javax.inject.Provider;

public final class ClassPresenter_Factory implements Factory<ClassPresenter> {
  private final MembersInjector<ClassPresenter> classPresenterMembersInjector;

  private final Provider<ClassApi> classApiProvider;

  public ClassPresenter_Factory(
      MembersInjector<ClassPresenter> classPresenterMembersInjector,
      Provider<ClassApi> classApiProvider) {
    assert classPresenterMembersInjector != null;
    this.classPresenterMembersInjector = classPresenterMembersInjector;
    assert classApiProvider != null;
    this.classApiProvider = classApiProvider;
  }

  @Override
  public ClassPresenter get() {
    return MembersInjectors.injectMembers(
        classPresenterMembersInjector, new ClassPresenter(classApiProvider.get()));
  }

  public static Factory<ClassPresenter> create(
      MembersInjector<ClassPresenter> classPresenterMembersInjector,
      Provider<ClassApi> classApiProvider) {
    return new ClassPresenter_Factory(classPresenterMembersInjector, classApiProvider);
  }
}
